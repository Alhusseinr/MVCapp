@model MVCapp.Models.register

@{
    ViewBag.Title = "Create";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="row">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-4">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <lable>@Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label" })</lable>
                        @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label" })</label>
                        @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })</label>
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label" })</label>
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label" })</label>
                        @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label" })</label>
                        @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        <label>@Html.LabelFor(model => model.sex, htmlAttributes: new { @class = "control-label" })</label>
                        @Html.EnumDropDownListFor(model => model.sex, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="row">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
